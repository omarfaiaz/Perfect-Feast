{% comment %} 
                                                      Custom Cart Section - Table Layout with Item, Value, Price, Quantity, Total, Remove 
{% endcomment %}

<section class="py-8">
  <div class="container mx-auto px-4">
    <form
      action="{{ routes.cart_url }}"
      method="post"
      id="cart-form">
      <div class="overflow-x-auto">
        <table class="min-w-full bg-white border border-gray-200 rounded shadow">
          <thead>
            <tr class="bg-gray-100">
              <th class="px-4 py-3 text-left font-semibold text-gray-700">Item</th>
              <th class="px-4 py-3 text-left font-semibold text-gray-700">Value</th>
              <th class="px-4 py-3 text-left font-semibold text-gray-700">Price</th>
              <th class="px-4 py-3 text-left font-semibold text-gray-700">Quantity</th>
              <th class="px-4 py-3 text-left font-semibold text-gray-700">Total</th>
              <th class="px-4 py-3 text-left font-semibold text-gray-700">Remove</th>
            </tr>
          </thead>
          <tbody>
            {% for item in cart.items %}
              <tr class="border-t border-gray-200 bg-gray-50 hover:bg-gray-100">
                <td class="px-4 py-3 text-brandPrimary font-semibold">
                  {{ item.product.title }}
                </td>
                <td class="px-4 py-3 text-gray-700">
                  {% assign value_option = '' %}
                  {% for option in item.options_with_values %}
                    {% if option.name == 'Value' %}
                      {% assign value_option = option.value %}
                    {% endif %}
                  {% endfor %}
                  {% if value_option != '' %}
                    Up to {{ value_option }}
                  {% else %}
                    &mdash;
                  {% endif %}
                </td>
                <td class="px-4 py-3 text-gray-700">
                  {{ item.final_price | money }}
                </td>
                <td class="px-4 py-3">
                  <input
                    type="number"
                    name="updates[]"
                    value="{{ item.quantity }}"
                    min="1"
                    class="w-24 px-2 py-1 border border-gray-300 rounded text-center" />
                </td>
                <td class="px-4 py-3 text-gray-700">
                  {{ item.final_line_price | money }}
                </td>
                <td class="px-4 py-3 text-center">
                  <a
                    href="{{ item.url_to_remove }}"
                    class="text-brandPrimary hover:text-red-600"
                    title="Remove">
                    <svg
                      xmlns="http://www.w3.org/2000/svg"
                      class="inline-block h-5 w-5"
                      fill="none"
                      viewBox="0 0 24 24"
                      stroke="currentColor">
                      <path
                        stroke-linecap="round"
                        stroke-linejoin="round"
                        stroke-width="2"
                        d="M6 18L18 6M6 6l12 12" />
                    </svg>
                  </a>
                </td>
              </tr>
            {% endfor %}
          </tbody>
        </table>
      </div>

      <!-- Additional order details -->
      <div class="mt-8 bg-white border border-gray-200 rounded shadow">
        <div class="p-6 space-y-6">

          <!-- 1) Company name (Compliments of...) -->
          <div>
            <label class="block text-lg font-semibold mb-2">
              1. Company name as you want it to appear in the "Compliments of..." space on the certificate:
              <span class="text-red-500">*</span>
            </label>
            <input
              type="text"
              id="company-name"
              name="attributes[Compliments Company Name]"
              value="{{ cart.attributes['Compliments Company Name'] | escape }}"
              class="w-full px-4 py-3 border border-gray-300 rounded focus:ring-2 focus:ring-brandPrimary focus:border-transparent"
              placeholder="Your company name"
              required>
            <p id="company-name-error" class="mt-1 text-xs text-red-600 hidden">Please enter your company name.</p>
          </div>

          <hr class="border-gray-200">

          <!-- 2) How to print recipient's name -->
          <fieldset>
            <legend class="block text-lg font-semibold mb-3">
              2. Indicate how you want the recipient's name printed:
              <span class="text-red-500">*</span>
            </legend>

            <div class="space-y-3">
              <div>
                <select
                  id="recipient-print-select"
                  name="attributes[Recipient Print Option]"
                  class="w-full md:w-80 lg:w-100 px-4 py-3 border border-gray-300 rounded focus:ring-2 focus:ring-brandPrimary"
                  required>
                  <option value="">Select an option</option>
                  <option
                    value="BEARER"
                    {% if cart.attributes['Recipient Print Option'] == 'BEARER' %}
                    selected{% endif %}>
                    Print BEARER in the space for the recipient's name
                  </option>
                  <option
                    value="VALUED EMPLOYEE"
                    {% if cart.attributes['Recipient Print Option'] == 'VALUED EMPLOYEE' %}
                    selected{% endif %}>
                    Print VALUED EMPLOYEE in the space for the recipient's name
                  </option>
                  <option
                    value="VALUED TEAM MEMBER"
                    {% if cart.attributes['Recipient Print Option'] == 'VALUED TEAM MEMBER' %}
                    selected{% endif %}>
                    Print VALUED TEAM MEMBER in the space for the recipient's name
                  </option>
                  <option
                    value="OTHER"
                    {% if cart.attributes['Recipient Print Option'] == 'OTHER' %}
                    selected{% endif %}>
                    Other (specify below)
                  </option>
                  <option
                    value="PERSONALIZED"
                    {% if cart.attributes['Recipient Print Option'] == 'PERSONALIZED' %}
                    selected{% endif %}>
                    Personalized (enter name below)
                  </option>
                  <option
                    value="BLANK"
                    {% if cart.attributes['Recipient Print Option'] == 'BLANK' %}
                    selected{% endif %}>
                    Leave it blank so you can personalize each certificate
                  </option>
                </select>
                <p id="recipient-option-error" class="mt-1 text-xs text-red-600 hidden">Please select how you want the recipient's name printed.</p>
              </div>

              <!-- Other text input -->
              <div id="other-row" class="{% unless cart.attributes['Recipient Print Option'] == 'OTHER' %}hidden{% endunless %}">
                <input
                  id="other-text"
                  type="text"
                  name="attributes[Other Text]"
                  value="{{ cart.attributes['Other Text'] | escape }}"
                  class="w-full md:w-80 px-4 py-2 border border-gray-300 rounded focus:ring-2 focus:ring-brandPrimary"
                  placeholder="Enter custom text">
                <p id="other-text-error" class="mt-1 text-xs text-red-600 hidden">Please enter custom text.</p>
              </div>

              <!-- Personalized name input -->
              <div id="personalized-row" class="{% unless cart.attributes['Recipient Print Option'] == 'PERSONALIZED' %}hidden{% endunless %}">
                <input
                  id="personalized-name"
                  type="text"
                  name="attributes[Personalized Name]"
                  value="{{ cart.attributes['Personalized Name'] | escape }}"
                  class="w-full md:w-80 lg:w-100 px-4 py-2 border border-gray-300 rounded focus:ring-2 focus:ring-brandPrimary"
                  placeholder="Enter recipient's name">
                <p id="personalized-name-error" class="mt-1 text-xs text-red-600 hidden">Please enter recipient's name.</p>
              </div>
            </div>
          </fieldset>

          <!-- Special instructions (uses Shopify cart note) -->
          <div>
            <label class="block text-lg font-semibold mb-2">SPECIAL INSTRUCTIONS</label>
            <textarea
              name="note"
              rows="5"
              class="w-full px-4 py-3 border border-gray-300 rounded focus:ring-2 focus:ring-brandPrimary"
              placeholder="Type your text here">{{ cart.note }}</textarea>
          </div>
        </div>
      </div>

      <!-- Cart Totals and Actions -->
      <div class="flex flex-col md:flex-row justify-between items-center mt-10 gap-8">
        <a href="{{ routes.all_products_collection_url }}" class="bg-gray-100 px-10 py-5 rounded text-brandPrimary font-bold tracking-wide text-lg hover:bg-gray-200 transition-colors">
          CONTINUE SHOPPING
        </a>
        <div class="flex-1 flex flex-col items-end">
          <div class="min-w-88 text-center">
            <h3>CART TOTALS</h3>
          </div>
          <table class="min-w-88 bg-white border border-gray-200 rounded text-left mb-6">
            <tr>
              <td class="py-2 px-4 font-semibold text-gray-600">Subtotal</td>
              <td class="py-2 px-4 text-gray-700">{{ cart.subtotal_price | money }}</td>
            </tr>
            <tr>
              <td class="py-2 px-4 font-semibold text-gray-600">Total</td>
              <td class="py-2 px-4 text-gray-700">{{ cart.total_price | money }}</td>
            </tr>
          </table>
          <button
            type="submit"
            name="checkout"
            id="checkout-btn"
            class="btn btn--primary">
            CHECK OUT
          </button>
        </div>
      </div>
    </form>
  </div>
</section>

<script>
        document.addEventListener('DOMContentLoaded', function () {
          const form = document.getElementById('cart-form');
          const select = document.getElementById('recipient-print-select');
          const personalizedRow = document.getElementById('personalized-row');
          const personalizedInput = document.getElementById('personalized-name');
          const otherRow = document.getElementById('other-row');
          const otherInput = document.getElementById('other-text');
          const companyNameInput = document.getElementById('company-name');
          const checkoutBtn = document.getElementById('checkout-btn');
  
          // Error elements
          const companyNameError = document.getElementById('company-name-error');
          const recipientOptionError = document.getElementById('recipient-option-error');
          const otherTextError = document.getElementById('other-text-error');
          const personalizedNameError = document.getElementById('personalized-name-error');
        
          function sync() {
            const selected = select.value;
            
            const showPersonalized = selected === 'PERSONALIZED';
            const showOther = selected === 'OTHER';
            
            personalizedRow.classList.toggle('hidden', !showPersonalized);
            otherRow.classList.toggle('hidden', !showOther);
            
            if (showPersonalized) {
              personalizedInput.setAttribute('required', 'required');
              otherInput.removeAttribute('required');
            } else if (showOther) {
              otherInput.setAttribute('required', 'required');
              personalizedInput.removeAttribute('required');
            } else {
              personalizedInput.removeAttribute('required');
              otherInput.removeAttribute('required');
            }
  
            // Clear errors when fields become hidden
            if (!showPersonalized) {
              personalizedNameError.classList.add('hidden');
              personalizedInput.classList.remove('border-red-500');
            }
            if (!showOther) {
              otherTextError.classList.add('hidden');
              otherInput.classList.remove('border-red-500');
            }
          }
  
          function showError(element, errorElement, message) {
            element.classList.add('border-red-500');
            errorElement.textContent = message;
            errorElement.classList.remove('hidden');
          }
  
          function hideError(element, errorElement) {
            element.classList.remove('border-red-500');
            errorElement.classList.add('hidden');
          }
  
          function validateForm() {
            let isValid = true;
  
            // Clear all errors first
            hideError(companyNameInput, companyNameError);
            hideError(select, recipientOptionError);
            hideError(otherInput, otherTextError);
            hideError(personalizedInput, personalizedNameError);
  
            // Validate company name
            if (!companyNameInput.value.trim()) {
              showError(companyNameInput, companyNameError, 'Please enter your company name.');
              isValid = false;
            }
  
            // Validate recipient print option
            if (!select.value) {
              showError(select, recipientOptionError, 'Please select how you want the recipient\'s name printed.');
              isValid = false;
            } else {
              // Validate conditional fields
              if (select.value === 'OTHER' && !otherInput.value.trim()) {
                showError(otherInput, otherTextError, 'Please enter custom text.');
                isValid = false;
              }
              if (select.value === 'PERSONALIZED' && !personalizedInput.value.trim()) {
                showError(personalizedInput, personalizedNameError, 'Please enter recipient\'s name.');
                isValid = false;
              }
            }
  
            return isValid;
          }
  
          // Form submission validation
          form.addEventListener('submit', function(e) {
            // Only validate if trying to checkout
            if (e.submitter && e.submitter.name === 'checkout') {
              if (!validateForm()) {
                e.preventDefault();
                // Scroll to first error
                const firstError = form.querySelector('.border-red-500');
                if (firstError) {
                  firstError.scrollIntoView({ behavior: 'smooth', block: 'center' });
                  firstError.focus();
                }
              }
            }
          });
  
          // Real-time validation to hide errors as user types
          companyNameInput.addEventListener('input', function() {
            if (this.value.trim()) {
              hideError(this, companyNameError);
            }
          });
  
          otherInput.addEventListener('input', function() {
            if (this.value.trim()) {
              hideError(this, otherTextError);
            }
          });
  
          personalizedInput.addEventListener('input', function() {
            if (this.value.trim()) {
              hideError(this, personalizedNameError);
            }
          });
  
          select.addEventListener('change', function() {
            if (this.value) {
              hideError(this, recipientOptionError);
            }
            sync();
          });
          
          sync();
        });
</script>

{% schema %}
  {
    "name": "Cart Table",
    "settings": []
  }
{% endschema %}