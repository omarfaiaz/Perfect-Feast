<!-- sections/perfectfeast-product-grid.liquid -->

{%- liquid
  assign collection = collections[section.settings.collection] | default: collections.all
  assign products_per_row = section.settings.products_per_row | default: 3
  assign show_vendor = section.settings.show_vendor
  assign show_price = section.settings.show_price
  assign show_product_tags = section.settings.show_product_tags
  assign show_add_to_cart = section.settings.show_add_to_cart
-%}

<div id="pfr-product-grid" class="bg-{{ section.settings.section_bg_color }} py-{{ section.settings.section_padding }}">
  <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
    
    {% if section.settings.show_heading %}
      <div class="text-center mb-12">
        <h2 class="text-4xl font-bold text-{{ section.settings.heading_color }} mb-4">
          {{ section.settings.heading | default: collection.title }}
        </h2>
        {% if section.settings.subheading != blank %}
          <div class="text-lg text-{{ section.settings.subheading_color }}">
            {{ section.settings.subheading }}
          </div>
        {% endif %}
      </div>
    {% endif %}
    
    <div id="product-grid-{{ section.id }}" 
         class="grid grid-cols-1 {% if products_per_row == 2 %}md:grid-cols-2{% elsif products_per_row == 3 %}md:grid-cols-2 lg:grid-cols-3{% elsif products_per_row == 4 %}md:grid-cols-2 lg:grid-cols-4{% else %}md:grid-cols-2 lg:grid-cols-5{% endif %} gap-8"
         data-section-id="{{ section.id }}">
      
      {% for product in collection.products limit: section.settings.products_limit %}
        {%- liquid
          assign current_variant = product.selected_or_first_available_variant
          assign featured_image = current_variant.featured_image | default: product.featured_image
          assign product_form_id = 'product-form-' | append: section.id | append: '-' | append: product.id
        -%}
        
        {% render 'product-card', 
      product: product,
      show_vendor: show_vendor,
      show_price: show_price,
      show_tags: show_product_tags,
      show_certificate_badge: section.settings.show_certificate_badge,
      certificate_text: section.settings.certificate_text,
      show_add_to_cart: show_add_to_cart,
      variant_label: section.settings.variant_label,
      quantity_label: section.settings.quantity_label,
      add_to_cart_text: section.settings.add_to_cart_text,
      view_details_text: section.settings.view_details_text,
      section_id: section.id
    %}
        
      {% else %}
        <!-- No Products Message -->
        <div class="col-span-full text-center py-12">
          <div class="max-w-md mx-auto">
            <svg class="mx-auto h-12 w-12 text-gray-400 mb-4" fill="none" viewBox="0 0 24 24" stroke="currentColor">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M20 7l-8-4-8 4m16 0l-8 4m8-4v10l-8 4m0-10L4 7m8 4v10M4 7v10l8 4" />
            </svg>
            <h3 class="text-xl font-semibold text-gray-600 mb-2">No products found</h3>
            <p class="text-gray-500">Please check back later or browse our other collections.</p>
          </div>
        </div>
      {% endfor %}
    </div>
    
    <!-- Load More Button -->
    {% if section.settings.show_load_more and collection.products.size > section.settings.products_limit %}
      <div class="text-center mt-12">
        <button id="load-more-{{ section.id }}" 
                class="px-8 py-3 bg-gradient-to-r from-red-500 to-red-600 hover:from-red-600 hover:to-red-700 text-white font-bold rounded-lg hover:shadow-lg transform hover:-translate-y-1 transition-all duration-200"
                data-page="1" 
                data-collection="{{ collection.handle }}"
                data-section-id="{{ section.id }}">
          Load More Products
        </button>
      </div>
    {% endif %}
    
    <!-- Loading State -->
    <div id="loading-grid-{{ section.id }}" class="hidden grid grid-cols-1 {% if products_per_row == 2 %}md:grid-cols-2{% elsif products_per_row == 3 %}md:grid-cols-2 lg:grid-cols-3{% elsif products_per_row == 4 %}md:grid-cols-2 lg:grid-cols-4{% else %}md:grid-cols-2 lg:grid-cols-5{% endif %} gap-8">
      {% for i in (1..3) %}
        <div class="bg-white rounded-2xl overflow-hidden shadow-lg animate-pulse">
          <div class="h-48 bg-gray-200"></div>
          <div class="p-6">
            <div class="h-6 bg-gray-200 mb-2 rounded"></div>
            <div class="h-4 bg-gray-200 mb-4 rounded"></div>
            <div class="h-4 bg-gray-200 w-3/4 rounded mb-4"></div>
            <div class="h-10 bg-gray-200 rounded mb-2"></div>
            <div class="h-12 bg-gray-200 rounded mb-2"></div>
            <div class="h-10 bg-gray-200 rounded"></div>
          </div>
        </div>
      {% endfor %}
    </div>
  </div>
</div>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    const sectionId = '{{ section.id }}';
    
    // Initialize product grid functionality
    initializeProductGrid();
    
    function initializeProductGrid() {
      // Handle variant selection
      $('.variant-selector').on('change', function() {
        const $select = $(this);
        const productId = $select.data('product-id');
        const $card = $select.closest(`[data-product-id="${productId}"]`);
        const $option = $select.find('option:selected');
        const price = $option.data('price');
        const comparePrice = $option.data('compare-price');
        const available = $option.data('available');
        const inventory = $option.data('inventory');
        
        // Update price display
        const $priceDisplay = $(`.product-price-${productId}`);
        let priceHTML = `<span class="text-lg">${Shopify.formatMoney(price)}</span>`;
        if (comparePrice && comparePrice > price) {
          priceHTML += `<br><span class="line-through text-sm opacity-75">${Shopify.formatMoney(comparePrice)}</span>`;
        }
        $priceDisplay.html(priceHTML);
        
        // Update quantity max based on inventory
        const $quantityInput = $card.find(`#quantity-${productId}`);
        if (inventory > 0) {
          $quantityInput.attr('max', inventory);
        }
        
        // Update add to cart button
        const $addToCartBtn = $card.find('.add-to-cart-btn');
        if (available) {
          $addToCartBtn.prop('disabled', false)
                       .html(`{{ section.settings.add_to_cart_text | default: "Add to Cart" }}`)
                       .removeClass('opacity-50 cursor-not-allowed');
        } else {
          $addToCartBtn.prop('disabled', true)
                       .html('❌ Sold Out')
                       .addClass('opacity-50 cursor-not-allowed');
        }
      });
      
      // Quantity control buttons
      $('.quantity-decrease').on('click', function() {
        const productId = $(this).data('product-id');
        const $input = $(`#quantity-${productId}`);
        const currentVal = parseInt($input.val()) || 1;
        if (currentVal > 1) {
          $input.val(currentVal - 1).trigger('change');
        }
      });
      
      $('.quantity-increase').on('click', function() {
        const productId = $(this).data('product-id');
        const $input = $(`#quantity-${productId}`);
        const currentVal = parseInt($input.val()) || 1;
        const maxVal = parseInt($input.attr('max')) || 999;
        if (currentVal < maxVal) {
          $input.val(currentVal + 1).trigger('change');
        }
      });
      

      
      // Form submission handling (regular form submission, not AJAX)
      $('[id^="product-form-"]').on('submit', function(e) {
        const $form = $(this);
        const $button = $form.find('.add-to-cart-btn');
        
        // Add loading state
        $button.html(`
          <div class="flex items-center justify-center">
            <div class="animate-spin rounded-full h-4 w-4 border-b-2 border-white mr-2"></div>
            Adding to Cart...
          </div>
        `).prop('disabled', true);
        
        // Form will submit normally to cart
      });
    }
    
    // Load more functionality
    $(`#load-more-${sectionId}`).on('click', function() {
      const $button = $(this);
      const page = parseInt($button.data('page')) + 1;
      const collection = $button.data('collection');
      
      $button.html(`
        <div class="flex items-center justify-center">
          <div class="animate-spin rounded-full h-4 w-4 border-b-2 border-white mr-2"></div>
          Loading...
        </div>
      `).prop('disabled', true);
      
      // Show loading skeletons
      $(`#loading-grid-${sectionId}`).removeClass('hidden');
      
      $.ajax({
        url: `/collections/${collection}`,
        data: {
          page: page,
          section_id: '{{ section.id }}',
          view: 'products'
        },
        success: function(data) {
          const $newProducts = $(data).find(`.product-card-${sectionId}`);
          
          if ($newProducts.length > 0) {
            $(`#product-grid-${sectionId}`).append($newProducts);
            $button.data('page', page).html('Load More Products').prop('disabled', false);
            initializeProductGrid(); // Re-initialize for new products
          } else {
            $button.html('No More Products').prop('disabled', true).addClass('opacity-50 cursor-not-allowed');
          }
          
          $(`#loading-grid-${sectionId}`).addClass('hidden');
        },
        error: function() {
          $button.html('Error Loading').prop('disabled', false).removeClass('bg-gradient-to-r from-red-500 to-red-600').addClass('bg-red-600');
          $(`#loading-grid-${sectionId}`).addClass('hidden');
          
          setTimeout(() => {
            $button.html('Load More Products').removeClass('bg-red-600').addClass('bg-gradient-to-r from-red-500 to-red-600');
          }, 3000);
        }
      });
    });
  });
</script>

{% schema %}
{
  "name": "Product Grid",
  "tag": "section",
  "class": "perfectfeast-product-grid",
  "settings": [
    {
      "type": "collection",
      "id": "collection",
      "label": "Collection",
  
    },
    {
      "type": "range",
      "id": "products_per_row",
      "label": "Products per row",
      "min": 2,
      "max": 5,
      "step": 1,
      "default": 3
    },
    {
      "type": "range",
      "id": "products_limit",
      "label": "Maximum products to show",
      "min": 6,
      "max": 50,
      "step": 1,
      "default": 12
    },
    {
      "type": "header",
      "content": "Section Heading"
    },
    {
      "type": "checkbox",
      "id": "show_heading",
      "label": "Show section heading",
      "default": true
    },
    {
      "type": "text",
      "id": "heading",
      "label": "Heading",
      "default": "Perfect Gift Certificates"
    },
    {
      "type": "richtext",
      "id": "subheading",
      "label": "Subheading",
      "default": "<p>Choose from our premium selection of gift certificates</p>"
    },
    {
      "type": "header",
      "content": "Product Display"
    },
    {
      "type": "checkbox",
      "id": "show_vendor",
      "label": "Show product vendor",
      "default": false
    },
    {
      "type": "checkbox",
      "id": "show_price",
      "label": "Show product price",
      "default": false
    },
    {
      "type": "checkbox",
      "id": "show_product_tags",
      "label": "Show product tags",
      "default": false
    },
    {
      "type": "checkbox",
      "id": "show_certificate_badge",
      "label": "Show certificate badge",
      "default": false
    },
    {
      "type": "text",
      "id": "certificate_text",
      "label": "Certificate badge text",
      "default": "Gift Certificate"
    },
    {
      "type": "checkbox",
      "id": "show_load_more",
      "label": "Show load more button",
      "default": false
    },
    {
      "type": "header",
      "content": "Add to Cart"
    },
    {
      "type": "checkbox",
      "id": "show_add_to_cart",
      "label": "Show add to cart functionality",
      "default": true
    },
    {
      "type": "text",
      "id": "variant_label",
      "label": "Variant selector label",
      "default": "Option"
    },
    {
      "type": "text",
      "id": "quantity_label",
      "label": "Quantity selector label",
      "default": "Quantity"
    },
    {
      "type": "text",
      "id": "add_to_cart_text",
      "label": "Add to cart button text",
      "default": "Add to Cart"
    },
    {
      "type": "text",
      "id": "view_details_text",
      "label": "View details button text",
      "default": "View Details"
    },
    {
      "type": "header",
      "content": "Colors & Styling"
    },
    {
      "type": "select",
      "id": "section_bg_color",
      "label": "Section background",
      "options": [
        { "value": "white", "label": "White" },
        { "value": "gray-50", "label": "Light Gray" },
        { "value": "gray-100", "label": "Gray" },
        { "value": "red-50", "label": "Light Red" }
      ],
      "default": "gray-50"
    },
    {
      "type": "select",
      "id": "heading_color",
      "label": "Heading color",
      "options": [
        { "value": "gray-900", "label": "Dark Gray" },
        { "value": "black", "label": "Black" },
        { "value": "red-600", "label": "Red" },
        { "value": "red-800", "label": "Dark Red" }
      ],
      "default": "gray-900"
    },
    {
      "type": "select",
      "id": "subheading_color",
      "label": "Subheading color",
      "options": [
        { "value": "gray-600", "label": "Medium Gray" },
        { "value": "gray-700", "label": "Dark Gray" },
        { "value": "red-500", "label": "Red" },
        { "value": "red-600", "label": "Dark Red" }
      ],
      "default": "gray-600"
    },
    {
      "type": "header",
      "content": "Spacing"
    },
    {
      "type": "range",
      "id": "section_padding",
      "label": "Section padding",
      "min": 8,
      "max": 20,
      "step": 2,
      "default": 12,
      "unit": "px"
    }
  ],
  "presets": [
    {
      "name": "Product Grid",
      "settings": {
        "collection": "all",
        "products_per_row": 3,
        "show_heading": true,
        "heading": "Perfect Gift Certificates",
        "subheading": "<p>Choose from our premium selection of gift certificates</p>",
        "show_add_to_cart": true
      }
    }
  ]
}
{% endschema %}